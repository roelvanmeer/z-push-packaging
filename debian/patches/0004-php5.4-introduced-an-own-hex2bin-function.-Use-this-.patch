From: Wolfram Quester <wolfi@sigxcpu.org>
Date: Fri, 23 Mar 2012 23:26:37 +0100
Subject: php5.4 introduced an own hex2bin function. Use this if it exists, if
 it doesn't use the old implementation by z-push

---
 backend/ics.php         |   46 +++++++++++++++++++++++-----------------------
 backend/kolab/kolab.php |    6 +++---
 include/utils.php       |   12 ++++++++----
 streamer.php            |    4 ++--
 4 files changed, 36 insertions(+), 32 deletions(-)

diff --git a/backend/ics.php b/backend/ics.php
index e1d9540..81adf8a 100644
--- a/backend/ics.php
+++ b/backend/ics.php
@@ -556,7 +556,7 @@ class ImportContentsChangesICS extends MAPIMapping {
     function Config($state, $flags = 0) {
         $stream = mapi_stream_create();
         if(strlen($state) == 0) {
-            $state = hex2bin("0000000000000000");
+            $state = zp_hex2bin("0000000000000000");
         }
 
         mapi_stream_write($stream, $state);
@@ -606,7 +606,7 @@ class ImportContentsChangesICS extends MAPIMapping {
     function ImportMessageChange($id, $message) {
         $parentsourcekey = $this->_folderid;
         if($id)
-            $sourcekey = hex2bin($id);
+            $sourcekey = zp_hex2bin($id);
 
         $flags = 0;
         $props = array();
@@ -659,7 +659,7 @@ class ImportContentsChangesICS extends MAPIMapping {
             return true;
         }
         // do a 'soft' delete so people can un-delete if necessary
-        mapi_importcontentschanges_importmessagedeletion($this->importer, 1, array(hex2bin($objid)));
+        mapi_importcontentschanges_importmessagedeletion($this->importer, 1, array(zp_hex2bin($objid)));
     }
 
     // Import a change in 'read' flags .. This can never conflict
@@ -673,7 +673,7 @@ class ImportContentsChangesICS extends MAPIMapping {
             return true;
         }
         */
-        $readstate = array ( "sourcekey" => hex2bin($id), "flags" => $flags);
+        $readstate = array ( "sourcekey" => zp_hex2bin($id), "flags" => $flags);
         $ret = mapi_importcontentschanges_importperuserreadstatechange($this->importer, array ($readstate) );
         if($ret == false)
             debugLog("Unable to set read state: " . sprintf("%x", mapi_last_hresult()));
@@ -693,7 +693,7 @@ class ImportContentsChangesICS extends MAPIMapping {
             return false;
         }
         // Get the entryid of the message we're moving
-        $entryid = mapi_msgstore_entryidfromsourcekey($this->_store, $this->_folderid, hex2bin($id));
+        $entryid = mapi_msgstore_entryidfromsourcekey($this->_store, $this->_folderid, zp_hex2bin($id));
         if(!$entryid) {
             debugLog("Unable to resolve source message id");
             return false;
@@ -705,7 +705,7 @@ class ImportContentsChangesICS extends MAPIMapping {
             debugLog("Unable to open source message:".sprintf("%x", mapi_last_hresult()));
             return false;
         }
-        $dstentryid = mapi_msgstore_entryidfromsourcekey($this->_store, hex2bin($newfolder));
+        $dstentryid = mapi_msgstore_entryidfromsourcekey($this->_store, zp_hex2bin($newfolder));
         if(!$dstentryid) {
             debugLog("Unable to resolve destination folder");
             return false;
@@ -1305,7 +1305,7 @@ class ImportHierarchyChangesICS  {
 
         $stream = mapi_stream_create();
         if(strlen($state) == 0) {
-            $state = hex2bin("0000000000000000");
+            $state = zp_hex2bin("0000000000000000");
         }
 
         mapi_stream_write($stream, $state);
@@ -1317,7 +1317,7 @@ class ImportHierarchyChangesICS  {
     function ImportFolderChange($id, $parent, $displayname, $type) {
         //create a new folder if $id is not set
         if (!$id) {
-            $parentfentryid = mapi_msgstore_entryidfromsourcekey($this->store, hex2bin($parent));
+            $parentfentryid = mapi_msgstore_entryidfromsourcekey($this->store, zp_hex2bin($parent));
             $parentfolder = mapi_msgstore_openentry($this->store, $parentfentryid);
             $parentpros = mapi_getprops($parentfolder, array(PR_DISPLAY_NAME));
             $newfolder = mapi_folder_createfolder($parentfolder, $displayname, "");
@@ -1326,13 +1326,13 @@ class ImportHierarchyChangesICS  {
             $id = bin2hex($props[PR_SOURCE_KEY]);
         }
 
-        mapi_importhierarchychanges_importfolderchange($this->importer, array ( PR_SOURCE_KEY => hex2bin($id), PR_PARENT_SOURCE_KEY => hex2bin($parent), PR_DISPLAY_NAME => $displayname) );
+        mapi_importhierarchychanges_importfolderchange($this->importer, array ( PR_SOURCE_KEY => zp_hex2bin($id), PR_PARENT_SOURCE_KEY => zp_hex2bin($parent), PR_DISPLAY_NAME => $displayname) );
         debugLog("Imported changes for folder:$id");
         return $id;
     }
 
     function ImportFolderDeletion($id, $parent) {
-        return mapi_importhierarchychanges_importfolderdeletion ($this->importer, 0, array (PR_SOURCE_KEY => hex2bin($id)) );
+        return mapi_importhierarchychanges_importfolderdeletion ($this->importer, 0, array (PR_SOURCE_KEY => zp_hex2bin($id)) );
     }
 
     function GetState() {
@@ -2206,7 +2206,7 @@ class ExportChangesICS  {
         if(strlen($syncstate) > 0)
             mapi_stream_write($stream, $syncstate);
         else
-            mapi_stream_write($stream, hex2bin("0000000000000000"));
+            mapi_stream_write($stream, zp_hex2bin("0000000000000000"));
 
         $this->statestream = $stream;
 
@@ -2478,7 +2478,7 @@ class BackendICS {
 
         $rootprops = mapi_getprops($root, array(PR_IPM_APPOINTMENT_ENTRYID));
         foreach($this->_importedFolders as $folderid) {
-            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, hex2bin($folderid));
+            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, zp_hex2bin($folderid));
             if($rootprops[PR_IPM_APPOINTMENT_ENTRYID] == $entryid) {
                 debugLog("Update freebusy for ". $folderid);
                 $calendar = mapi_msgstore_openentry($this->_defaultstore, $entryid);
@@ -2782,12 +2782,12 @@ class BackendICS {
 
     function GetContentsImporter($folderid) {
         $this->_importedFolders[] = $folderid;
-        return new ImportContentsChangesICS($this->_session, $this->_defaultstore, hex2bin($folderid));
+        return new ImportContentsChangesICS($this->_session, $this->_defaultstore, zp_hex2bin($folderid));
     }
 
     function GetExporter($folderid = false) {
         if($folderid !== false)
-            return new ExportChangesICS($this->_session, $this->_defaultstore, hex2bin($folderid));
+            return new ExportChangesICS($this->_session, $this->_defaultstore, zp_hex2bin($folderid));
         else
             return new ExportChangesICS($this->_session, $this->_defaultstore);
     }
@@ -2991,7 +2991,7 @@ class BackendICS {
 
         if(isset($orig) && $orig) {
             // Append the original text body for reply/forward
-            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, hex2bin($parent), hex2bin($orig));
+            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, zp_hex2bin($parent), zp_hex2bin($orig));
             $fwmessage = mapi_msgstore_openentry($this->_defaultstore, $entryid);
 
             if($fwmessage) {
@@ -3063,7 +3063,7 @@ class BackendICS {
 
         if($forward) {
             // Add attachments from the original message in a forward
-            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, hex2bin($parent), hex2bin($orig));
+            $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, zp_hex2bin($parent), zp_hex2bin($orig));
             $fwmessage = mapi_msgstore_openentry($this->_defaultstore, $entryid);
 
             $attachtable = mapi_message_getattachmenttable($fwmessage);
@@ -3117,8 +3117,8 @@ class BackendICS {
     }
 
     function Fetch($folderid, $id, $mimesupport = 0) {
-        $foldersourcekey = hex2bin($folderid);
-        $messagesourcekey = hex2bin($id);
+        $foldersourcekey = zp_hex2bin($folderid);
+        $messagesourcekey = zp_hex2bin($id);
 
         $dummy = false;
 
@@ -3151,8 +3151,8 @@ class BackendICS {
         if(!isset($id) || !isset($attachnum))
             return false;
 
-        $sourcekey = hex2bin($id);
-        $foldersourcekey = hex2bin($folderid);
+        $sourcekey = zp_hex2bin($id);
+        $foldersourcekey = zp_hex2bin($folderid);
 
         $entryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, $foldersourcekey, $sourcekey);
         if(!$entryid) {
@@ -3190,7 +3190,7 @@ class BackendICS {
 
     function MeetingResponse($requestid, $folderid, $response, &$calendarid) {
         // Use standard meeting response code to process meeting request
-        $reqentryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, hex2bin($folderid), hex2bin($requestid));
+        $reqentryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, zp_hex2bin($folderid), zp_hex2bin($requestid));
         $mapimessage = mapi_msgstore_openentry($this->_defaultstore, $reqentryid);
 
         if(!$mapimessage) {
@@ -3260,7 +3260,7 @@ class BackendICS {
 
 
         // delete meeting request from Inbox
-        $folderentryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, hex2bin($folderid));
+        $folderentryid = mapi_msgstore_entryidfromsourcekey($this->_defaultstore, zp_hex2bin($folderid));
         $folder = mapi_msgstore_openentry($this->_defaultstore, $folderentryid);
         mapi_folder_deletemessages($folder, array($reqentryid), 0);
 
@@ -3431,4 +3431,4 @@ class BackendICS {
     }
 }
 
-?>
\ No newline at end of file
+?>
diff --git a/backend/kolab/kolab.php b/backend/kolab/kolab.php
index 9a7a2d4..f72520f 100644
--- a/backend/kolab/kolab.php
+++ b/backend/kolab/kolab.php
@@ -1701,7 +1701,7 @@
                 $contact=new SyncContact();   
                 if ( $with_uid != 0)
                 {
-                    $contact->uid= hex2bin($kcontact['uid']);
+                    $contact->uid= zp_hex2bin($kcontact['uid']);
                 }
                 $contact->fileas= w2u($kcontact['last-name'].", " . $kcontact['given-name']); 
                 $contact->firstname= w2u($kcontact['given-name'])   ;
@@ -1997,7 +1997,7 @@
 
                             //mappage
                             $event=new SyncAppointment();
-                            $event->uid = hex2bin($kevent['uid']);
+                            $event->uid = zp_hex2bin($kevent['uid']);
                             $event->dtstamp = time();
                             $event->subject=w2u($kevent['summary']);
                             $event->starttime=$kevent['start-date'];
@@ -2374,7 +2374,7 @@
                             $task=new SyncTask();
                             if ( $with_uid != 0)
                             {
-                                $task->uid= hex2bin($ktask['uid']);
+                                $task->uid= zp_hex2bin($ktask['uid']);
                             }
                             $task->subject=w2u($ktask['name']);
                             if ($ktask['start'])
diff --git a/include/utils.php b/include/utils.php
index dff154a..f157146 100644
--- a/include/utils.php
+++ b/include/utils.php
@@ -96,8 +96,12 @@ function _getFolderID($devid, $class) {
  * Function which converts a hex entryid to a binary entryid.
  * @param string @data the hexadecimal string
  */
-function hex2bin($data) {
-    return pack("H*", $data);
+function zp_hex2bin($data) {
+    if (function_exists('hex2bin')) {
+        return hex2bin($key);
+    } else {
+        return pack("H*", $data);
+    }
 }
 
 //if the ICS backend is loaded in CombinedBackend and Zarafa > 7
@@ -240,10 +244,10 @@ function getOLUidFromICalUid($icalUid) {
         $OLUid .= "vCal-Uid";
         $OLUid .= pack("V", 1);
         $OLUid .= $icalUid;
-        return hex2bin("040000008200E00074C5B7101A82E0080000000000000000000000000000000000000000". bin2hex($OLUid). "00");
+        return zp_hex2bin("040000008200E00074C5B7101A82E0080000000000000000000000000000000000000000". bin2hex($OLUid). "00");
     }
     else
-       return hex2bin($icalUid);
+       return zp_hex2bin($icalUid);
 }
 
 /**
diff --git a/streamer.php b/streamer.php
index 957eaa8..72a4a59 100644
--- a/streamer.php
+++ b/streamer.php
@@ -128,7 +128,7 @@ class Streamer {
                                 if(!$decoder->getElementEndTag())
                                     return false;
                             } else if($map[STREAMER_TYPE] == STREAMER_TYPE_HEX) {
-                                $decoded = hex2bin($decoder->getElementContent());
+                                $decoded = zp_hex2bin($decoder->getElementContent());
                                 if(!$decoder->getElementEndTag())
                                     return false;
                             } else {
@@ -266,4 +266,4 @@ class Streamer {
     }
 };
 
-?>
\ No newline at end of file
+?>
