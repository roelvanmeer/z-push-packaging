#!/bin/sh
# postrm script for z-push
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

reload() {
	service=$1

	# Redirection of 3 is needed because Debconf uses it and it might
	# be inherited by webserver. See bug #446324.
	if [ -x /usr/sbin/invoke-rc.d ]; then
		invoke-rc.d $service reload 3>/dev/null || true
	else
		/etc/init.d/$service reload 3>/dev/null || true
	fi
}

webserver_disable() {
	# Find out which webservers we have.
	webservers=
	if [ -e /etc/apache2/conf-enabled/z-push.conf -o -e /etc/apache2/conf-enabled/z-push-autodiscover.conf ] ; then
		webservers="$webservers apache2"
	fi
	if [ -e /etc/lighttpd/conf-enabled/50-z-push.conf ] ; then
		webservers="$webservers lighttpd"
	fi

	for webserver in $webservers; do

		case "$webserver" in
			apache2)
				if [ -e /usr/share/apache2/apache2-maintscript-helper ] ; then
					. /usr/share/apache2/apache2-maintscript-helper
					apache2_invoke disconf z-push-autodiscover.conf || exit $?
					apache2_invoke disconf z-push.conf || exit $?
				fi
			;;

			lighttpd)
				ret=0
				lighty-disable-mod z-push || ret=$?
				if [ $ret = 1 ]; then
					exit 1
				fi
				reload $webserver
			;;

			nginx)
			;;
		esac

	done
}

case "$1" in
	purge)
		webserver_disable $1
		rm -rf /var/log/z-push
		rm -rf /var/lib/z-push
	;;
	remove)
		webserver_disable $1
	;;
	upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
	;;
	*)
esac


#DEBHELPER#

exit 0
